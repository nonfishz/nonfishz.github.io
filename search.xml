<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Nginx（持续更新）</title>
      <link href="/nginx/nginx/"/>
      <url>/nginx/nginx/</url>
      
        <content type="html"><![CDATA[<h3 id="Nginx处理请求的过程"><a href="#Nginx处理请求的过程" class="headerlink" title="Nginx处理请求的过程"></a>Nginx处理请求的过程</h3><span id="more"></span><img src="/load_images/nginx2.png" alt="img" style="zoom:33%;" /><h3 id="三个常见的应用场景"><a href="#三个常见的应用场景" class="headerlink" title="三个常见的应用场景"></a>三个常见的应用场景</h3><ul><li>静态资源服务（Web Server）</li><li>反向代理服务</li><li>API服务</li></ul><h3 id="Nginx的核心优势"><a href="#Nginx的核心优势" class="headerlink" title="Nginx的核心优势"></a>Nginx的核心优势</h3><ul><li>高并发、高性能</li><li>扩展性好（模块化设计）</li><li>异步非阻塞的事件驱动模型</li></ul><h3 id="Nginx进程"><a href="#Nginx进程" class="headerlink" title="Nginx进程"></a>Nginx进程</h3><h4 id="进程结构图-多进程结构"><a href="#进程结构图-多进程结构" class="headerlink" title="进程结构图-多进程结构"></a>进程结构图-多进程结构</h4><img src="/load_images/nginx3.png" alt="img" style="zoom:33%;" /><p>多进程之间通过共享内存进行通信</p><h4 id="使用信号量管理Nginx进程"><a href="#使用信号量管理Nginx进程" class="headerlink" title="使用信号量管理Nginx进程"></a>使用信号量管理Nginx进程</h4><h5 id="常用信号量（kill-l查看信号量）"><a href="#常用信号量（kill-l查看信号量）" class="headerlink" title="常用信号量（kill -l查看信号量）"></a>常用信号量（kill -l查看信号量）</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SIGCHLD kill -17 $PID</span><br><span class="line">SIGQUIT kill -3 $PID</span><br><span class="line">SIFTERM kill -15 $PID | kill $PID</span><br><span class="line">SIGKILL kill -9 $PID</span><br><span class="line">SIGHUP  kill -1 $PID #重读配置文件</span><br><span class="line">SIGUSR1 kill -10 $PID #重新打开日志文件</span><br><span class="line">SIGUSR2 kill -12 $PID</span><br><span class="line">SIGWINCH kill -28 $PID</span><br></pre></td></tr></table></figure><h5 id="master进程"><a href="#master进程" class="headerlink" title="master进程"></a>master进程</h5><img src="/load_images/nginx4.png" alt="img" style="zoom:33%;" /><h5 id="worker进程（不建议直接对work进程发送信号）"><a href="#worker进程（不建议直接对work进程发送信号）" class="headerlink" title="worker进程（不建议直接对work进程发送信号）"></a>worker进程（不建议直接对work进程发送信号）</h5><img src="/load_images/nginx5.png" alt="img" style="zoom:33%;" /><h5 id="命令行（命令行的原理也是向master发送信号量实现的）"><a href="#命令行（命令行的原理也是向master发送信号量实现的）" class="headerlink" title="命令行（命令行的原理也是向master发送信号量实现的）"></a>命令行（命令行的原理也是向master发送信号量实现的）</h5><img src="/load_images/nginx6.png" alt="img" style="zoom:33%;" /><h5 id="发送信号量管理进程"><a href="#发送信号量管理进程" class="headerlink" title="发送信号量管理进程"></a>发送信号量管理进程</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">停止nginx</span></span><br><span class="line">ps -ef | grep nginx</span><br><span class="line">kill -s SIGTERM master_pid #mac中kill -TERM master_pid</span><br><span class="line">ps -ef | grep nginx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重新读取配置文件</span></span><br><span class="line">ps -ef | grep nginx</span><br><span class="line">kill -s SIGHUP master_pid #mac中 -HUP</span><br><span class="line">ps -ef | grep nginx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">杀死worker进程(之后master进程会重新启动一个worker进程)</span></span><br><span class="line">ps -ef | grep nginx</span><br><span class="line">kill -s SIGTERM worker_pid</span><br><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure><h5 id="命令行管理nginx进程"><a href="#命令行管理nginx进程" class="headerlink" title="命令行管理nginx进程"></a>命令行管理nginx进程</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nginx -h</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-s signal     : send signal to a master process: stop, quit, reopen, reload</span></span><br><span class="line">nginx -s [stop, quit, reopen, reload] #reopen重新打开日志文件 reload重载配置文件</span><br></pre></td></tr></table></figure><h5 id="reload重载配置文件的流程"><a href="#reload重载配置文件的流程" class="headerlink" title="reload重载配置文件的流程"></a>reload重载配置文件的流程</h5><ol><li><strong>向master进程发送HUP信号（reload命令）</strong></li><li><strong>master进程检查配置语法是否正确</strong></li><li><strong>master进程打开监听端口（如果配置文件端口变动）</strong></li><li><strong>master进程使用新的配置文件启动新的worker子进程</strong></li><li><strong>master进程向老的worker子进程发送QUIT信号</strong></li><li><strong>旧的worker进程关闭监听句柄，处理完当前连接后关闭进程</strong></li></ol><img src="/load_images/nginx7.png" alt="img" style="zoom:33%;" /><h3 id="Nginx热部署"><a href="#Nginx热部署" class="headerlink" title="Nginx热部署"></a>Nginx热部署</h3><p><strong>在不中断当前业务的前提下，对nginx进行平滑升级</strong></p><h4 id="热升级流程"><a href="#热升级流程" class="headerlink" title="热升级流程"></a>热升级流程</h4><ol><li><strong>将旧的nginx文件替换成新编译的nginx文件（目录结构要相同）</strong></li><li><strong>向master进程发送USR2信号</strong></li><li><strong>master进程修改pid文件，从nginx.pid加后缀变为nginx.pid.oldbin</strong></li><li><strong>master进程用新的nginx文件启动新master进程（这时候旧master和新master并存，两者都可以接受处理用户请求）</strong></li><li><strong>向旧的master进程发送WINCH信号，目的是退出旧的worker子进程，不退出旧master进程的目的是为了回滚情形</strong></li><li><strong>新功能测试没问题之后，向旧master发送QUIT型号，退出。这时候会自动删除3步骤生成的oldbin后缀名文件</strong></li><li><strong>如果需要回滚：向旧master发送HUP，向新的master发送QUIT</strong></li></ol><img src="/load_images/nginx8.png" alt="img" style="zoom:33%;" /><h3 id="Nginx模块化管理机制"><a href="#Nginx模块化管理机制" class="headerlink" title="Nginx模块化管理机制"></a>Nginx模块化管理机制</h3><h4 id="模块结构图"><a href="#模块结构图" class="headerlink" title="模块结构图"></a>模块结构图</h4><img src="/load_images/nginx9.png" alt="img" style="zoom:33%;" /><h4 id="模块体系结构"><a href="#模块体系结构" class="headerlink" title="模块体系结构"></a>模块体系结构</h4><img src="/load_images/nginx10.png" alt="img" style="zoom:33%;" /><h3 id="编译安装Nginx"><a href="#编译安装Nginx" class="headerlink" title="编译安装Nginx"></a>编译安装Nginx</h3><h4 id="常见配置参数"><a href="#常见配置参数" class="headerlink" title="常见配置参数"></a>常见配置参数</h4><table><thead><tr><th align="center">参数</th><th>含义</th></tr></thead><tbody><tr><td align="center">–prefix</td><td>指定安装的目录</td></tr><tr><td align="center">–user</td><td>运行nginx的worker子进程的属主 属主需要提前设置好</td></tr><tr><td align="center">–group</td><td>运行nginx的worker子进程的属组 属组需要提前设置好</td></tr><tr><td align="center">–pid-path</td><td>存放进程运行的pid文件的路径</td></tr><tr><td align="center">–conf-path</td><td>配置文件nginx.conf的存放路径</td></tr><tr><td align="center">–error-log-path</td><td>错误日志error.log的存放路径</td></tr><tr><td align="center">–http-log-path</td><td>访问日志access.log的存放路径</td></tr><tr><td align="center">–with-pcre</td><td>pcre库的存放路径，正则表达式会用到</td></tr><tr><td align="center">–with-zlib</td><td>zlib库的存放路径，gzip模块会用到</td></tr></tbody></table><h4 id="内置参数默认原则"><a href="#内置参数默认原则" class="headerlink" title="内置参数默认原则"></a>内置参数默认原则</h4><p>–with 显示加上，默认不内置</p><p>–without 显示去掉，默认内置</p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><h4 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h4><img src="/load_images/nginx11.png" alt="img" style="zoom:33%;" /><h4 id="虚拟主机分类"><a href="#虚拟主机分类" class="headerlink" title="虚拟主机分类"></a>虚拟主机分类</h4><ul><li><strong>基于多IP的虚拟主机</strong></li><li><strong>基于多端口的虚拟主机</strong></li><li><strong>基于域名的虚拟主机</strong></li></ul><h5 id="基于多IP"><a href="#基于多IP" class="headerlink" title="基于多IP"></a>基于多IP</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改网卡接口绑定的IP地址</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启网络</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改nginx配置文件server段listen 监听对应ip和端口</span></span><br><span class="line">server&#123;</span><br><span class="line">listen 192.168.184.240;</span><br><span class="line">server_name localhost;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">listen 192.168.184.241;</span><br><span class="line">server_name localhost;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">nginx -t查看配置文件是有报错，之后重启nginx</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">浏览器访问对应ip和端口看下效果</span></span><br></pre></td></tr></table></figure><h5 id="基于多端口"><a href="#基于多端口" class="headerlink" title="基于多端口"></a>基于多端口</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">listen 8080;</span><br><span class="line">server_name localhost;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">root html/virtual_host1;</span><br><span class="line">index index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">listen 8081;</span><br><span class="line">server_name localhost;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">root html/virtual_host2;</span><br><span class="line">index index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">nginx -t查看配置文件是有报错，之后重启nginx</span></span><br></pre></td></tr></table></figure><h5 id="基于域名的虚拟机"><a href="#基于域名的虚拟机" class="headerlink" title="基于域名的虚拟机"></a>基于域名的虚拟机</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name local.test1.com;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">root html/domain_host1;</span><br><span class="line">index index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name local.test2.com;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">root html/domain_host2;</span><br><span class="line">index index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置文件main段核心参数用法"><a href="#配置文件main段核心参数用法" class="headerlink" title="配置文件main段核心参数用法"></a>配置文件main段核心参数用法</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">user USERNAME [GROUP]</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">指定运行nginx的worker子进程的属主和属组，其中属组可以不指定</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例</span></span><br><span class="line">user nginx nginx;</span><br><span class="line"></span><br><span class="line">pid DIR</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">指定运行nginx的master主进程的pid文件存放路径</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例</span></span><br><span class="line">pid /usr/local/var/run/nginx.pid</span><br><span class="line"></span><br><span class="line">worker_rlimit_nofile number</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">指定worker子进程可以打开的最大文件句柄数</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例</span></span><br><span class="line">worker_rlimit_nofile 20480;</span><br><span class="line"></span><br><span class="line">worker_rlimit_core size</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">指定worker子进程异常终止后的core文件，用于记录分析问题</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例</span></span><br><span class="line">worker_rlimit_core 50M;</span><br><span class="line">working_directory /usr/local/var/log/nginx/tmp; #此目录对nginx要有写权限</span><br><span class="line"></span><br><span class="line">worker_processes number | auto;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">指定nginx启动的worker子进程数量</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例</span></span><br><span class="line">worker_processes 4;</span><br><span class="line">worker_processes auto;</span><br><span class="line"></span><br><span class="line">worker_cpu_affinity cpumask1 cpumask2...</span><br><span class="line">worker_cpu_affinity auto [cpumask];</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将每个worker子进程与CPU物理核心绑定</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例</span></span><br><span class="line">worker_cpu_affinity 0001 0010 0100 1000;#4个物理核心，4个worker子进程</span><br><span class="line">worker_cpu_affinity 00000001 00000010 00001000 00010000 00100000 01000000 10000000; #8个物理核心，8个worker子进程</span><br><span class="line">worker_cpu_affinity 01 10 01 10; #2个物理核心，4个子进程</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">备注：将每个worker子进程与特定CPU物理核心绑定，优势在于：避免同一个worker子进程在不同的CPU核心上切换，缓存失效，降低性能；其实并不能真正的避免进程切换</span></span><br><span class="line"></span><br><span class="line">worker_priority number</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">执行worker子进程的<span class="built_in">nice</span>值，以调整运行nginx的优先级，通常设定为负值，以优先调用nginx</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例</span></span><br><span class="line">worker_priority -10; #优先级计算120-10=110，worker子进程的优先级为110</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">备注：Linux默认进程的优先级值是120，值越小越有限；<span class="built_in">nice</span>设定范围为-20到+19</span></span><br><span class="line"></span><br><span class="line">worker_shutdown_timeout time</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">指定worker子进程优雅退出时的超时时间</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例</span></span><br><span class="line">worker_shutdown_timeout 5s;</span><br><span class="line"></span><br><span class="line">timer_resolution time</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">worker子进程内部使用的计时器精度，调整时间间隔越大，系统调用越少，有利于性能提升；反之，系统调用越多，性能下降</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例</span></span><br><span class="line">timer_resolution 100ms;</span><br><span class="line"></span><br><span class="line">daemon on|off</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">设定nginx的运行方式，前台还是后台，前台用户调试，后台用于生产</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例</span></span><br><span class="line">daemon off;</span><br><span class="line"></span><br><span class="line">lock_file file</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">负载均衡互斥锁文件存放路径</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认配置：lock_file logs/nginx.lock</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">推荐配置：lock_file logs/nginx.lock</span></span><br></pre></td></tr></table></figure><h5 id="worker子进程与CPU核心绑定"><a href="#worker子进程与CPU核心绑定" class="headerlink" title="worker子进程与CPU核心绑定"></a>worker子进程与CPU核心绑定</h5><img src="/load_images/nginx12.png" alt="img" style="zoom:33%;" /><h5 id="客户端请求处理流程"><a href="#客户端请求处理流程" class="headerlink" title="客户端请求处理流程"></a>客户端请求处理流程</h5><img src="/load_images/nginx13.png" alt="img" style="zoom:33%;" /><h5 id="配置错误解决"><a href="#配置错误解决" class="headerlink" title="配置错误解决"></a>配置错误解决</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx: [emerg] getpwnam(&quot;nginx&quot;) failed in /usr/local/etc/nginx/nginx.conf:2</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">配置文件中user指定的属主，属组在系统中没有，需要创建</span></span><br></pre></td></tr></table></figure><h4 id="配置文件event段核心参数用法"><a href="#配置文件event段核心参数用法" class="headerlink" title="配置文件event段核心参数用法"></a>配置文件event段核心参数用法</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">use method</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">nginx使用何种事件驱动模型 method值：select、poll、kqueue、epoll、/dev/poll、eventport</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认配置：无</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">推荐不指定，让nginx自己选择</span></span><br><span class="line"></span><br><span class="line">worker_connections number</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">worker子进程能够处理的最大并发连接数</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认配置：worker_connections 1024</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">推荐配置；worker_connections 65535/worker_processes | 65535</span></span><br><span class="line"></span><br><span class="line">accept_mutex on | off</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">是否打开负载均衡互斥锁</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认配置 off</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">推荐配置 on 开启时，后台会生成一个负载均衡锁，负载均衡锁会轮流的将请求由master process发送给子进程</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果accept_mutex的值被设为off，那么当有请求需要处理时，所有的worker进程都会从waiting状态中唤醒，</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">但是只有一个worker进程能处理请求，这造成了thundering herd现象，这个现象每一秒钟会发生多次。</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">它使服务器的性能下降，因为所有被唤醒的worker进程在重新进入waiting状态前会占用一段CPU时间</span></span><br><span class="line"></span><br><span class="line">accept_mutex_delay time</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">需要开启accept_mutex才会生效</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认配置 accept_mutex_delay 500ms</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">推荐配置 accept_mutex_delay 200ms</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">当accept_mutex功能启用后，只有一个持有mutex锁的worker进程会接受并处理请求，其他worker进程等待。</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">accept_mutex_delay指定的时间就是这些worker进程的等待时间，过了等待时间下一个worker进程便取得mutex锁，处理请求。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">muti_accept on | off</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">worker子进程可以接收的新连接个数</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认配置：multi_accept off</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">推荐配置：multi_accept on 打开后，worker进程会一次性接受监听队列中的所有请求，然后处理</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果web服务器面对的是一个持续的请求流，那么启用multi_accept可能会造成worker进程一次接受的请求大于worker_connections指定可以接受的请求数。</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">这就是overflow，这个overflow会造成性能损失，overflow这部分的请求不会受到处理</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="server-name"><a href="#server-name" class="headerlink" title="server_name"></a>server_name</h4><h5 id="指令的用法"><a href="#指令的用法" class="headerlink" title="指令的用法"></a>指令的用法</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">需要在hosts文件中配置DNS</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法结构</span></span><br><span class="line">server_name name1 name2 name3 ...;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例1 精确匹配</span></span><br><span class="line">server_name local.test.com;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例2</span></span><br><span class="line">server_name *.test.com; #左侧通配符匹配</span><br><span class="line">server_name local.test.*; #右侧通配符匹配</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例3</span></span><br><span class="line">server_name local.test.com *.test.com;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例4</span></span><br><span class="line">server_name ~^local\.test\..*$ #正则表达式匹配</span><br></pre></td></tr></table></figure><h5 id="指令用法优先级"><a href="#指令用法优先级" class="headerlink" title="指令用法优先级"></a>指令用法优先级</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">多域名如何匹配</span></span><br><span class="line">server&#123;</span><br><span class="line">server_name local.test.com;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">server_name *.test.com;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">server_name local.test.*;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">server_name ~^local\.test\..*$;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">问题：访问local.test.com，这几个server都能够匹配，那么到底访问哪个server呢？</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">这就涉及到指令写法的优先级</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">优先级从高到底依次为：精确匹配、左侧通配符匹配、右侧通配符匹配、正则表达式匹配</span></span><br></pre></td></tr></table></figure><h4 id="root和alias"><a href="#root和alias" class="headerlink" title="root和alias"></a>root和alias</h4><h5 id="root指令"><a href="#root指令" class="headerlink" title="root指令"></a>root指令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root path;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值：root html;</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文:http, server, location, <span class="keyword">if</span> <span class="keyword">in</span> location</span></span><br></pre></td></tr></table></figure><h5 id="alias指令"><a href="#alias指令" class="headerlink" title="alias指令"></a>alias指令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alias path;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值：无</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：location</span></span><br></pre></td></tr></table></figure><h5 id="root和alias的相同点和区别"><a href="#root和alias的相同点和区别" class="headerlink" title="root和alias的相同点和区别"></a>root和alias的相同点和区别</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">相同点</span></span><br><span class="line">URI到磁盘文件的映射</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">区别</span></span><br><span class="line">root会将定义路径与URI叠加；alias则只取定义路径</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例</span></span><br><span class="line">location /picture &#123;</span><br><span class="line">root /usr/local/Celler/nginx/1.23.1/html/picture;</span><br><span class="line">&#125;</span><br><span class="line">客户端请求local.test.com/picture/1.jpg，则对应磁盘映射路径/usr/local/Celler/nginx/1.23.1/html/picture/picture/1.jpg </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">root会把URI叠加上去，所以root只需要写成root /usr/local/Celler/nginx/1.23.1/html即可</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">可以通过error.log查看错误信息</span></span><br><span class="line"></span><br><span class="line">location /picture &#123;</span><br><span class="line">alias /usr/local/Celler/nginx/1.23.1/html/picture/; #使用alias，末尾一定加/</span><br><span class="line">&#125;</span><br><span class="line">客户端请求local.test.com/picture/1.jpg，则对应磁盘映射路径/usr/local/Celler/nginx/1.23.1/html/picture/1.jpg #alias不会把URI叠加上去</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意事项</span></span><br><span class="line">使用alias，末尾一定加/</span><br><span class="line">alias只能位于location块中</span><br></pre></td></tr></table></figure><h4 id="location基础用法"><a href="#location基础用法" class="headerlink" title="location基础用法"></a>location基础用法</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法结构</span></span><br><span class="line">location [ = | ~ | ~* | ^~ ] uri &#123; ... &#125;</span><br><span class="line">location @name &#123; ... &#125;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：server, location</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>匹配规则</th><th>含义</th><th>示例</th><th>优先级</th></tr></thead><tbody><tr><td>&#x3D;</td><td>精确匹配</td><td>location &#x3D; &#x2F;images&#x2F;{ … }</td><td>最高</td></tr><tr><td>^~</td><td>匹配到即停止搜索</td><td>location ^~ &#x2F;images&#x2F; { … }</td><td></td></tr><tr><td>~</td><td>正则匹配，区分大小写</td><td>location ~ .(jpg|gif)$ { … }</td><td></td></tr><tr><td>~*</td><td>正则匹配，不区分大小写</td><td>location ~* .{jpg|gif}$ { … }</td><td></td></tr><tr><td>不带任何符号</td><td></td><td>location &#x2F; { … }</td><td>最低</td></tr></tbody></table><h5 id="官网示例"><a href="#官网示例" class="headerlink" title="官网示例"></a>官网示例</h5><p><a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#location">http://nginx.org/en/docs/http/ngx_http_core_module.html#location</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Let’s illustrate the above by an example:</span><br><span class="line"></span><br><span class="line">location = / &#123;</span><br><span class="line">    [ configuration A ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">    [ configuration B ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /documents/ &#123;</span><br><span class="line">    [ configuration C ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ^~ /images/ &#123;</span><br><span class="line">    [ configuration D ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~* \.(gif|jpg|jpeg)$ &#123;</span><br><span class="line">    [ configuration E ]</span><br><span class="line">&#125;</span><br><span class="line">The “/” request will match configuration A, #A和B都能匹配到，但是=的优先级高，所以最终匹配的是A</span><br><span class="line">the “/index.html” request will match configuration B, #A和B都能匹配到，但是A是完全精确匹配，只有在完全匹配/的时候才会走A，所以这里匹配的是B</span><br><span class="line">the “/documents/document.html” request will match configuration C, #B和C都能匹配到，但是C匹配的更精准</span><br><span class="line">the “/images/1.gif” request will match configuration D, #D和E都能匹配到，但是^~优先级比~*高，所以匹配D</span><br><span class="line">and the “/documents/1.jpg” request will match configuration E. #C和E都能匹配到，但是~*优先级比E高，所以匹配E</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在都能匹配到的情况下，最终匹配优先级高的</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意</span></span><br><span class="line">/test/ &#123; ... &#125;和^~ /test/ &#123; ... &#125; 这两种写法同时出现会存在冲突，nginx认为这两个配置是重复的</span><br></pre></td></tr></table></figure><h5 id="location中URL结尾的反斜线"><a href="#location中URL结尾的反斜线" class="headerlink" title="location中URL结尾的反斜线"></a>location中URL结尾的反斜线</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">不带/</span></span><br><span class="line">location /test &#123; ... &#125; </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">处理规则：</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">先将<span class="built_in">test</span>作为一个目录，去root定义的目录找<span class="built_in">test</span>文件夹</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">test</span>目录存在：根据index配置去找对应文件，如果index没有配置，默认去找index.html；找不到对应文件，返回403</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">test</span>目录不存在：将<span class="built_in">test</span>作为一个文件，如果文件存在，将文件内容返回，Chrome可能存在问题，可以换个浏览器</span></span><br><span class="line"></span><br><span class="line">location /test/ &#123; ... &#125; </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">处理规则：</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">直接将<span class="built_in">test</span>作为一个目录，去root定义的目录找<span class="built_in">test</span>文件夹，如果没有这个文件夹，不会将<span class="built_in">test</span>作为文件处理，返回404</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">test</span>目录存在：根据index配置去找对应文件，如果index没有配置，默认去找index.html；找不到对应文件，返回403</span></span><br></pre></td></tr></table></figure><h4 id="stub-status模块的用法"><a href="#stub-status模块的用法" class="headerlink" title="stub_status模块的用法"></a>stub_status模块的用法</h4><p><strong>nginx监控页面的模块</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法结构</span></span><br><span class="line">stub_status;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">低于1.7.5版本：stub_status on;</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值:—</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文:server, location</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例</span></span><br><span class="line">location /uri &#123; #uri要具有保密性，防止暴露服务器信息</span><br><span class="line">stub_status;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意：要想使用此指令，需要在编译Nginx的时候指定-with-http_stub_status_module</span></span><br></pre></td></tr></table></figure><h5 id="状态信息"><a href="#状态信息" class="headerlink" title="状态信息"></a>状态信息</h5><table><thead><tr><th>状态项</th><th>含义</th></tr></thead><tbody><tr><td>Active Connections</td><td>活跃的连接数量</td></tr><tr><td>accepts</td><td>接受的客户端连接总数量</td></tr><tr><td>handled</td><td>处理的客户端连接总数量</td></tr><tr><td>requests</td><td>客户端总的请求数量</td></tr><tr><td>Reading</td><td>读取客户端的连接数</td></tr><tr><td>Writing</td><td>相应数据到客户端的连接数</td></tr><tr><td>Waiting</td><td>空闲客户端请求连接数量</td></tr></tbody></table><h5 id="内嵌变量"><a href="#内嵌变量" class="headerlink" title="内嵌变量"></a>内嵌变量</h5><table><thead><tr><th>变量名</th><th>含义</th></tr></thead><tbody><tr><td>$connections_active</td><td>同Active connections值</td></tr><tr><td>$connections_reading</td><td>同Reading值</td></tr><tr><td>$connections_writing</td><td>同Writing值</td></tr><tr><td>$connections_waiting</td><td>同Waiting值</td></tr></tbody></table><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name local.test.com;</span><br><span class="line">root html;</span><br><span class="line">location /stub_status &#123;</span><br><span class="line">stub_status;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">浏览器访问local.test.com/stub_status</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">页面结果展示（刷新页面数据会变动）：</span></span><br><span class="line">Active connections: 2 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 26 26 81 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 1 </span><br></pre></td></tr></table></figure><h3 id="HTTP核心模块"><a href="#HTTP核心模块" class="headerlink" title="HTTP核心模块"></a>HTTP核心模块</h3><h4 id="connection和request"><a href="#connection和request" class="headerlink" title="connection和request"></a>connection和request</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">基本含义</span></span><br><span class="line">connection是连接，即常说的tcp连接，三次握手，状态机</span><br><span class="line">request是请求，例如http请求，无状态协议</span><br><span class="line">request是必须建立在connection之上</span><br></pre></td></tr></table></figure><h4 id="limit-conn限制connection的模块"><a href="#limit-conn限制connection的模块" class="headerlink" title="limit_conn限制connection的模块"></a>limit_conn限制connection的模块</h4><ul><li>作用是限制客户端并发连接数</li><li>默认编译进Nginx，通过–without-http_limit_conn_module禁用</li><li>使用共享内存，对所有worker子进程生效</li></ul><h5 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h5><ul><li><strong>limit_conn_zone</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法</span></span><br><span class="line">limit_conn_zone key zone=name:size;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">说明：key 可以是文本、变量或文本与变量的组合；name需要全局唯一。</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值：无</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：http</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">官网示例：对用户IP进行并发计数，将计数内存区命名为addr，设置计数内存区大小为10MB</span></span><br><span class="line">limit_conn_zone $binary_remote_addr zone=addr:10m;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">官网示例说明</span></span><br><span class="line">Note that instead of $remote_addr, the $binary_remote_addr variable is used here. </span><br><span class="line">The $remote_addr variable’s size can vary from 7 to 15 bytes. The stored state occupies either 32 or 64 bytes of memory on 32-bit platforms and always 64 bytes on 64-bit platforms. </span><br><span class="line">The $binary_remote_addr variable’s size is always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses. The stored state always occupies 32 or 64 bytes on 32-bit platforms and 64 bytes on 64-bit platforms. </span><br><span class="line">One megabyte(兆字节) zone can keep about 32 thousand 32-byte states or about 16 thousand 64-byte states. If the zone storage is exhausted, the server will return the error to all further requests.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例：限制同一server最大并发数</span></span><br><span class="line">limit_conn_zone $server_name zone=perserver:10m;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>limit_conn_status</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法</span></span><br><span class="line">limit_conn_status code;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值</span></span><br><span class="line">limit_conn_status 503;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：http, server, location</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">说明：指定nginx回复那些被禁用的连接请求时的状态码，默认情况下是503（Service Unavailable 服务不可用）。当限制行为发生的时候，返回的状态码</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">状态码必须在400到599之间</span></span><br></pre></td></tr></table></figure><ul><li><strong>limit_conn_log_level</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法</span></span><br><span class="line">limit_conn_log_level info | notice | warn | error;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值</span></span><br><span class="line">limit_conn_log_level error;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：http, server, location</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">说明：为服务器限制连接数的情况设置所需的日志记录级别。当限制行为发生的时候，记录日志。</span></span><br></pre></td></tr></table></figure><ul><li><strong>limit_conn</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法</span></span><br><span class="line">limit_conn zone number;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值：无</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：http, server, location</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Sets the shared memory zone and the maximum allowed number of connections <span class="keyword">for</span> a given key value. When this <span class="built_in">limit</span> is exceeded, the server will <span class="built_in">return</span> the error <span class="keyword">in</span> reply to a request</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例：每个IP地址，一次只允许一个连接</span></span><br><span class="line">limit_conn_zone $binary_remote_addr zone=addr:10m;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    location /download/ &#123;</span><br><span class="line">        limit_conn addr 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="limit-req限制request的模块"><a href="#limit-req限制request的模块" class="headerlink" title="limit_req限制request的模块"></a>limit_req限制request的模块</h4><ul><li>用于限制客户端处理请求的平均速率</li><li>默认编译进Nginx，通过–without-http_limit_req_module禁用</li><li>使用共享内存，对所有worker子进程生效</li><li>限流算法：leaky_bucket</li></ul><img src="/load_images/nginx14.png" alt="img" style="zoom: 50%;" /><h5 id="常用指令-1"><a href="#常用指令-1" class="headerlink" title="常用指令"></a>常用指令</h5><ul><li><strong>limit_req_zone</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法</span></span><br><span class="line">limit_req_zone key zone=name:size rate=rate [sync];</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值：无</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：http</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例</span></span><br><span class="line">limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s; #每秒一个请求</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">限制客户端请求平均速率为2r/m，每分钟2个请求，即每30秒处理一个请求，不会在第一个30秒内处理两个请求，即使第一个请求很快处理完。</span></span><br></pre></td></tr></table></figure><ul><li><strong>limit_req_status</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法</span></span><br><span class="line">limit_req_status code;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值</span></span><br><span class="line">limit_req_status 503;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：http、server、location</span></span><br></pre></td></tr></table></figure><ul><li><strong>limit_req_log_level</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法</span></span><br><span class="line">limit_req_log_level info | notice | warn | error;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值</span></span><br><span class="line">limit_req_log_level error;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：http, server, location</span></span><br></pre></td></tr></table></figure><ul><li><strong>limit_req</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法</span></span><br><span class="line">limit_req zone=name [burst=number] [nodelay | delay=number];</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值：无</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：http, server, location</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例：平均每秒允许不超过1个请求，突发不超过5个请求</span></span><br><span class="line">limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">error_log logs/one.log info;</span><br><span class="line">    location /search/ &#123;</span><br><span class="line">    limit_req_status 504;</span><br><span class="line">    limit_req_log_level notice;</span><br><span class="line">        limit_req zone=one burst=5;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="access模块"><a href="#access模块" class="headerlink" title="access模块"></a>access模块</h4><p>限制特定IP或网段访问</p><h5 id="指令集"><a href="#指令集" class="headerlink" title="指令集"></a>指令集</h5><ul><li><strong>allow</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法</span></span><br><span class="line">allow address | CIDR | unix: | all;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值：无</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：http, server, location, limit_except</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>deny</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法</span></span><br><span class="line">deny address | CIDR | unix: | all;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值：无</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：http, server, location, limit_except</span></span><br></pre></td></tr></table></figure><h5 id="组合示例"><a href="#组合示例" class="headerlink" title="组合示例"></a>组合示例</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    deny  192.168.1.1;</span><br><span class="line">    allow 192.168.1.0/24; #除了192.168.1.1以外，都能访问，如果两行互换位置，那么deny不会生效，因为allow的范围包含了192.168.1.1</span><br><span class="line">    </span><br><span class="line">    allow 10.1.1.0/16;</span><br><span class="line">    </span><br><span class="line">    allow 2001:0db8::/32;</span><br><span class="line">    </span><br><span class="line">    deny  all; #除上面allow的地址以外都拒绝掉</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Auth-basic模块"><a href="#Auth-basic模块" class="headerlink" title="Auth_basic模块"></a>Auth_basic模块</h4><p>限制特定用户访问</p><h5 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h5><ul><li>基于HTTP Basic Authentication协议进行用户名密码认证</li><li>默认已编译进Nginx，通过–without-http_auth_basic_module禁用</li></ul><h5 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h5><ul><li>auth_basic</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法</span></span><br><span class="line">auth_basic string | off;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值</span></span><br><span class="line">auth_basic off;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：http, server, location, limit_except</span></span><br></pre></td></tr></table></figure><ul><li>auth_basic_user_file</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法：auth_basic_user_file file;</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值：无</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：http, server, location, limit_except</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">官网说明</span></span><br><span class="line">file为用户名密码保存的文件，file可以是一个变量</span><br><span class="line">file文件内容格式：</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">comment</span></span><br><span class="line">name1:password1</span><br><span class="line">name2:password2:comment</span><br><span class="line">name3:password3</span><br><span class="line"></span><br><span class="line">The following password types are supported:</span><br><span class="line">· encrypted with the crypt() function; can be generated using the “htpasswd” utility from the Apache HTTP Server distribution or the “openssl passwd” command;</span><br><span class="line">· hashed with the Apache variant of the MD5-based password algorithm (apr1); can be generated with the same tools;</span><br><span class="line">· specified by the “&#123;scheme&#125;data” syntax (1.0.3+) as described in RFC 2307; currently implemented schemes include PLAIN (an example one, should not be used), SHA (1.3.13) (plain SHA-1 hashing, should not be used) and SSHA (salted SHA-1 hashing, used by some software packages, notably OpenLDAP and Dovecot).</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="用法示例"><a href="#用法示例" class="headerlink" title="用法示例"></a>用法示例</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    auth_basic           &quot;closed site&quot;;</span><br><span class="line">    auth_basic_user_file conf/htpasswd;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意：</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认去nginx配置文件目录下去找auth_basic_user_file指定的密码文件（</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如mac电脑，去/usr/local/etc/nginx/conf/htpasswd，其中conf/htpasswd是auth_basic_user_file指令指定的）</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">非使用绝对路径指定新目录</span></span><br></pre></td></tr></table></figure><h5 id="生成密码文件工具"><a href="#生成密码文件工具" class="headerlink" title="生成密码文件工具"></a>生成密码文件工具</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">htpasswd</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">所属软件包：httpd_tools</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">生成新密码文件：</span></span><br><span class="line">htpasswd -c encrypt_pass #encrypt_pass密码文件名</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加新用户密码：</span></span><br><span class="line">htpasswd -b encrypt_pass mike 123456 #向encrypt_pass文件添加新用户密码</span><br></pre></td></tr></table></figure><h4 id="auth-request模块"><a href="#auth-request模块" class="headerlink" title="auth_request模块"></a>auth_request模块</h4><h5 id="基本功能-1"><a href="#基本功能-1" class="headerlink" title="基本功能"></a>基本功能</h5><ul><li>基于子请求收到的HTTP响应码做访问控制</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">官网说明</span></span><br><span class="line">If the subrequest returns a 2xx response code, the access is allowed. </span><br><span class="line">If it returns 401 or 403, the access is denied with the corresponding error code. </span><br><span class="line">Any other response code returned by the subrequest is considered an error.</span><br><span class="line"></span><br><span class="line">For the 401 error, the client also receives the “WWW-Authenticate” header from the subrequest response.</span><br></pre></td></tr></table></figure><img src="/load_images/nginx15.png" alt="img" style="zoom:50%;" /><ul><li>默认没有编译进Nginx，通过–with-http_auth_request_module启用</li></ul><h5 id="指令-1"><a href="#指令-1" class="headerlink" title="指令"></a>指令</h5><p>根据子请求的结果启用授权，并设置子请求将发送到的URI。</p><ul><li>auth_request</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法auth_request uri | off;</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值</span></span><br><span class="line">auth_request off;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：http, server, location</span></span><br></pre></td></tr></table></figure><ul><li>auth_request_set</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法</span></span><br><span class="line">auth_request_set $variable value;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值：无</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：http, server, location</span></span><br></pre></td></tr></table></figure><h5 id="用法示例-1"><a href="#用法示例-1" class="headerlink" title="用法示例"></a>用法示例</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">官网示例</span></span><br><span class="line">location /private/ &#123;</span><br><span class="line">    auth_request /auth;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location = /auth &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8080/verify;</span><br><span class="line">    proxy_pass_request_body off;</span><br><span class="line">    proxy_set_header Content-Length &quot;&quot;;</span><br><span class="line">    proxy_set_header X-Original-URI $request_uri;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">本地示例</span></span><br><span class="line">server &#123;</span><br><span class="line">        listen 82;</span><br><span class="line">        server_name localhost;</span><br><span class="line"></span><br><span class="line">        root html;</span><br><span class="line"></span><br><span class="line">        location /oa/ &#123;</span><br><span class="line">            auth_request /auth;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location = /auth &#123;</span><br><span class="line">            return 200 &quot;test auth_request&quot;;</span><br><span class="line">            #return 403;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="rewrite模块"><a href="#rewrite模块" class="headerlink" title="rewrite模块"></a>rewrite模块</h4><h5 id="指令-2"><a href="#指令-2" class="headerlink" title="指令"></a>指令</h5><ul><li><strong>return</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法</span></span><br><span class="line">return code [text]; #code为2xx时，text才会在body中返回</span><br><span class="line">return code URL; #用于重定向，code为3xx</span><br><span class="line">return URL; #URL应以“http://”、“https://”或“$scheme”字符串开头</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认值：无</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上下文：server, location, <span class="keyword">if</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">说明</span></span><br><span class="line">停止处理请求，直接向客户端返回响应码或重定向到其他URL（非标准code 444 关闭连接而不发送响应头）</span><br><span class="line">执行return指令后，location中后续指令将不会被执行</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例</span></span><br><span class="line">location / &#123;</span><br><span class="line">......</span><br><span class="line">return 404;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="重定向状态码"><a href="#重定向状态码" class="headerlink" title="重定向状态码"></a>重定向状态码</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HTTP 1.0标准</span><br><span class="line">· 301 : 永久重定向</span><br><span class="line">· 302 : 临时重定向，禁止被缓存</span><br><span class="line"></span><br><span class="line">HTTP 1.1标准</span><br><span class="line">· 303 : 临时重定向，禁止缓存，允许改变方法</span><br><span class="line">· 307 : 临时重定向，禁止缓存，不允许改变方法</span><br><span class="line">· 308 : 永久重定向，不允许改变方法</span><br></pre></td></tr></table></figure><p>永久重定向和临时重定向</p><ul><li>永久重定向  假如当你访问 a.com时永久重定向到了b.com，用户的浏览器在收到响应后，自动将输入栏网址改变为 b.com；下一次访问a.com时浏览器会直接跳转到 b.com ，不会再请求a.com</li><li>临时重定向  假如当你访问 a.com时临时重定向到了b.com，用户的浏览器在收到响应后，输入栏仍是显示旧网址，但是显示的是 b.com的内容；下一次当你请求a.com时浏览器还会先请求a.com ，然后再重定向到b.com</li></ul>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mailhog邮件服务</title>
      <link href="/mail/mailhog/"/>
      <url>/mail/mailhog/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/mailhog/MailHog">MailHog</a></p><span id="more"></span><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">brew update</span><br><span class="line">brew search mailhog</span><br><span class="line">brew install mailhog</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行</span></span><br><span class="line">mailhog</span><br></pre></td></tr></table></figure><p>the SMTP server starts on port 1025<br>the HTTP server starts on port 8025</p><h5 id="laravel-env文件配置"><a href="#laravel-env文件配置" class="headerlink" title="laravel .env文件配置"></a>laravel .env文件配置</h5><p><img src="/load_images/mailhog.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> Mail </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mail </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac使用技巧（持续更新）</title>
      <link href="/mac/use_tips/"/>
      <url>/mac/use_tips/</url>
      
        <content type="html"><![CDATA[<h4 id="一、vim中鼠标滚动"><a href="#一、vim中鼠标滚动" class="headerlink" title="一、vim中鼠标滚动"></a>一、vim中鼠标滚动</h4><span id="more"></span><h5 id="1-Iterm2中设置（有弊端）"><a href="#1-Iterm2中设置（有弊端）" class="headerlink" title="1.Iterm2中设置（有弊端）"></a>1.Iterm2中设置（有弊端）</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">iterm2-&gt;</span><span class="language-bash">Profiles-&gt;advanced</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">搜索mouse</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">设置up down 设置的值要符合vim的操作命令(vim编辑中j为光标向下移动，k为向上移动)</span></span><br><span class="line">Scorll whell down sends the specified text when in alternate screen mode. 设置为/j</span><br><span class="line">Scorll whell up sends the specified text when in alternate screen mode. 设置为/k</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">此设置有个弊端就是，vim在编辑模式，上下滚动鼠标会输入j/k</span></span><br></pre></td></tr></table></figure><h5 id="2-x2F-vimrc文件中设置-建议"><a href="#2-x2F-vimrc文件中设置-建议" class="headerlink" title="2.~&#x2F;.vimrc文件中设置(建议)"></a>2.~&#x2F;.vimrc文件中设置(建议)</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.vimrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加配置</span></span><br><span class="line">set mouse=a</span><br></pre></td></tr></table></figure><h5 id="3-pecl安装swoole问题"><a href="#3-pecl安装swoole问题" class="headerlink" title="3.pecl安装swoole问题"></a>3.pecl安装swoole问题</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">可以通过--with-openssl-dir指定openssl位置</span></span><br><span class="line">enable sockets supports? [no] : yes</span><br><span class="line">enable openssl support? [no] : yes --with-openssl-dir=/usr/local/Cellar/openssl@1.1/1.1.1q</span><br></pre></td></tr></table></figure><h5 id="4-phpstorm安装swoole插件"><a href="#4-phpstorm安装swoole插件" class="headerlink" title="4.phpstorm安装swoole插件"></a>4.phpstorm安装swoole插件</h5><p><img src="/load_images/mac_use1.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP-编译安装扩展</title>
      <link href="/php/php_extension/"/>
      <url>/php/php_extension/</url>
      
        <content type="html"><![CDATA[<h4 id="安装示例"><a href="#安装示例" class="headerlink" title="安装示例"></a>安装示例</h4><h5 id="一、执行phpize"><a href="#一、执行phpize" class="headerlink" title="一、执行phpize"></a>一、执行phpize</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入php7.4的源码包中gd扩展的目录</span></span><br><span class="line">cd /usr/local/src/php-7.4.28/ext/gd</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">执行phpize</span></span><br><span class="line">/usr/local/php/php74/bin/phpize</span><br></pre></td></tr></table></figure><span id="more"></span><h5 id="二、此编译成功后会生成configure可执行文件："><a href="#二、此编译成功后会生成configure可执行文件：" class="headerlink" title="二、此编译成功后会生成configure可执行文件："></a>二、此编译成功后会生成configure可执行文件：</h5><p><img src="/load_images/php_extension1.png" alt="img"></p><p><img src="/load_images/php_extension2.png" alt="img"></p><h5 id="三、然后执行："><a href="#三、然后执行：" class="headerlink" title="三、然后执行："></a>三、然后执行：</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --with-php-config=/usr/local/php/php74/bin/php-config</span><br></pre></td></tr></table></figure><p><img src="/load_images/php_extension3.png" alt="imag"></p><h5 id="四、编译成功后会生成对应的Makefile："><a href="#四、编译成功后会生成对应的Makefile：" class="headerlink" title="四、编译成功后会生成对应的Makefile："></a>四、编译成功后会生成对应的Makefile：</h5><p><img src="/load_images/php_extension4.png" alt="img"></p><h5 id="五、make-amp-amp-make-install"><a href="#五、make-amp-amp-make-install" class="headerlink" title="五、make &amp;&amp; make install"></a>五、make &amp;&amp; make install</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h5 id="六、修改php-ini"><a href="#六、修改php-ini" class="headerlink" title="六、修改php.ini"></a>六、修改php.ini</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;extension=\&quot;gd.so\&quot;&quot; &gt;&gt; /usr/local/php/php74/etc/php.ini</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">之后重启PHP</span></span><br><span class="line"></span><br><span class="line">php74 -m</span><br></pre></td></tr></table></figure><p>需要注意的是，如果在安装php的时候，指定了–enable-gd，那么再使用编译安装gd，就会出现以下报错：</p><p><img src="/load_images/php_extension5.png" alt="img"></p><p>原因是：再php4.3版本之后，编译过程中使用–enable-gd后，表示gd已经编译过了，不能在使用以上方法进行重复编译</p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多版本PECL安装及使用</title>
      <link href="/php/pecl_multi_version/"/>
      <url>/php/pecl_multi_version/</url>
      
        <content type="html"><![CDATA[<p><a href="https://pear.php.net/manual/en/installation.getting.php">官方文档</a></p><h5 id="一、下载安装"><a href="#一、下载安装" class="headerlink" title="一、下载安装"></a>一、下载安装</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://pear.php.net/go-pear.phar</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果存在多版本PHP，需要指定PHP，多版本PECL安装方式相同</span></span><br><span class="line">sudo /usr/local/php/php74/bin/php go-pear.phar </span><br></pre></td></tr></table></figure><span id="more"></span><h5 id="二、输入对应数字指定目录"><a href="#二、输入对应数字指定目录" class="headerlink" title="二、输入对应数字指定目录:"></a>二、输入对应数字指定目录:</h5><p><img src="/load_images/pecl_install.png" alt="img"></p><h5 id="三、配置环境变量"><a href="#三、配置环境变量" class="headerlink" title="三、配置环境变量"></a>三、配置环境变量</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alias pecl74=&quot;/usr/local/php/php74/bin/pecl&quot;</span><br><span class="line">alias pear74=&quot;/usr/local/php/php74/bin/pear&quot;</span><br></pre></td></tr></table></figure><h5 id="四、使用"><a href="#四、使用" class="headerlink" title="四、使用"></a>四、使用</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用pecl安装Redis扩展</span></span><br><span class="line">pecl74 search redis</span><br><span class="line">pecl74 install redis</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改php.ini，添加redis.so</span></span><br><span class="line">extension=redis.so</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启PHP</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看是否安装成功</span></span><br><span class="line">php74 -m</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac编译多版本PHP</title>
      <link href="/php/php_multi_version/"/>
      <url>/php/php_multi_version/</url>
      
        <content type="html"><![CDATA[<h4 id="PHP8-0编译安装"><a href="#PHP8-0编译安装" class="headerlink" title="PHP8.0编译安装"></a>PHP8.0编译安装</h4><h5 id="一、下载源码、创建目录"><a href="#一、下载源码、创建目录" class="headerlink" title="一、下载源码、创建目录"></a>一、下载源码、创建目录</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/local/php/php80</span><br><span class="line"></span><br><span class="line">cd /usr/local/src</span><br><span class="line">wget https://www.php.net/distributions/php-8.0.16.tar.gz</span><br><span class="line">tar zxvf php-8.0.16.tar.gz</span><br><span class="line">cd php-8.0.16</span><br></pre></td></tr></table></figure><span id="more"></span><h5 id="二、编译"><a href="#二、编译" class="headerlink" title="二、编译"></a>二、编译</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成 configure 文件(可不用)</span></span><br><span class="line">./buildconf --force</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置构建流程</span></span><br><span class="line">sudo ./configure --prefix=/usr/local/php/php80/ \</span><br><span class="line">--with-config-file-path=/usr/local/php/php80/etc \</span><br><span class="line">--with-config-file-scan-dir=/usr/local/php/php80/etc/conf.d \</span><br><span class="line">--with-mhash \</span><br><span class="line">--with-mysqli=shared,mysqlnd \</span><br><span class="line">--with-pdo-mysql=shared,mysqlnd \</span><br><span class="line">--enable-gd \</span><br><span class="line">--with-openssl=/usr/local/Cellar/openssl@1.1/1.1.1m \</span><br><span class="line">--with-iconv=/usr/local/opt/libiconv/ \</span><br><span class="line">--with-zlib \</span><br><span class="line">--with-zip \</span><br><span class="line">--disable-debug \</span><br><span class="line">--disable-rpath \</span><br><span class="line">--enable-xml \</span><br><span class="line">--enable-bcmath \</span><br><span class="line">--enable-shmop \</span><br><span class="line">--enable-sysvsem \</span><br><span class="line">--enable-mbregex \</span><br><span class="line">--enable-mbstring \</span><br><span class="line">--enable-ftp \</span><br><span class="line">--enable-pcntl \</span><br><span class="line">--enable-sockets \</span><br><span class="line">--enable-soap \</span><br><span class="line">--without-pear \</span><br><span class="line">--with-gettext=/usr/local/opt/gettext \</span><br><span class="line">--enable-session \</span><br><span class="line">--with-curl \</span><br><span class="line">--with-jpeg \</span><br><span class="line">--with-freetype \</span><br><span class="line">--enable-gd-jis-conv \</span><br><span class="line">--enable-opcache \</span><br><span class="line">--enable-fpm \</span><br><span class="line">--without-gdbm \</span><br><span class="line">--enable-fast-install \</span><br><span class="line">--disable-fileinfo</span><br></pre></td></tr></table></figure><h5 id="三、可能会出现的问题"><a href="#三、可能会出现的问题" class="headerlink" title="三、可能会出现的问题"></a>三、可能会出现的问题</h5><h6 id="1-openssl"><a href="#1-openssl" class="headerlink" title="1.openssl"></a>1.openssl</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">没有找到openssl导致</span></span><br><span class="line">configure: error: Package requirements (openssl &gt;= 1.0.1) were not met:</span><br><span class="line"></span><br><span class="line">No package &#x27;openssl&#x27; found</span><br><span class="line"></span><br><span class="line">Consider adjusting the PKG_CONFIG_PATH environment variable if you</span><br><span class="line">installed software in a non-standard prefix.</span><br><span class="line"></span><br><span class="line">Alternatively, you may set the environment variables OPENSSL_CFLAGS</span><br><span class="line">and OPENSSL_LIBS to avoid the need to call pkg-config.</span><br><span class="line">See the pkg-config man page for more details.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">另一种可能是编译参数中openssl路径不对，注意brew安装路径</span></span><br></pre></td></tr></table></figure><p>问题解决：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果是使用brew安装的openssl，可以先使用brew list查看是否安装过openssl</span></span><br><span class="line">brew list;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果安装过，可以执行：</span></span><br><span class="line">brew link openssl@1.1</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">这时会收到警告：</span></span><br><span class="line">Warning: Refusing to link macOS provided/shadowed software: openssl@1.1</span><br><span class="line">If you need to have openssl@1.1 first in your PATH run:</span><br><span class="line">  echo &#x27;export PATH=&quot;/usr/local/opt/openssl@1.1/bin:$PATH&quot;&#x27; &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line">For compilers to find openssl@1.1 you may need to set:</span><br><span class="line">  export LDFLAGS=&quot;-L/usr/local/opt/openssl@1.1/lib&quot;</span><br><span class="line">  export CPPFLAGS=&quot;-I/usr/local/opt/openssl@1.1/include&quot;</span><br><span class="line"></span><br><span class="line">For pkg-config to find openssl@1.1 you may need to set:</span><br><span class="line">  export PKG_CONFIG_PATH=&quot;/usr/local/opt/openssl@1.1/lib/pkgconfig&quot;</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">首先添加~/.zshrc环境变量：</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">pkgconfig</span></span><br><span class="line">export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">openssl</span></span><br><span class="line">export OPENSSL_LIBS=&quot;-L/usr/local/Cellar/openssl@1.1/1.1.1q/lib&quot;</span><br><span class="line">export OPENSSL_CFLAGS=&quot;-I/usr/local/Cellar/openssl@1.1/1.1.1q/include&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">然后注册到pkgconfig</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看openssl是否在pkgconfig中</span></span><br><span class="line">pkg-config --list-all | grep openssl</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果不在pkgconfig中，可以新建软链接</span></span><br><span class="line">ln -s /usr/local/Cellar/openssl@1.1/1.1.1q/lib/pkgconfig/openssl.pc /usr/local/lib/pkgconfig</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果还报libcrypto.pc  libssl.pc相关错误，那么也要建立软连接</span></span><br><span class="line">ln -s /usr/local/Cellar/openssl@1.1/1.1.1q/lib/pkgconfig/libcrypto.pc /usr/local/lib/pkgconfig</span><br><span class="line">ln -s /usr/local/Cellar/openssl@1.1/1.1.1q/lib/pkgconfig/libssl.pc /usr/local/lib/pkgconfig</span><br></pre></td></tr></table></figure><h6 id="2-libjpeg"><a href="#2-libjpeg" class="headerlink" title="2.libjpeg"></a>2.libjpeg</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果报libjpeg相关错误，且通过brew安装没有效果</span></span><br><span class="line">./configure --help</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看jepe参数配置</span></span><br><span class="line">  --with-jpeg             GD: Enable JPEG support (only for bundled libgd) #仅适用于捆绑的libgd</span><br><span class="line">brew install libgd</span><br></pre></td></tr></table></figure><h6 id="3-pkg-config"><a href="#3-pkg-config" class="headerlink" title="3.pkg-config"></a>3.pkg-config</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">configure: error: The pkg-config script could not be found or is too old.  Make sure it</span><br><span class="line">is in your PATH or set the PKG_CONFIG environment variable to the full</span><br><span class="line">path to pkg-config.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">问题解决</span></span><br><span class="line">brew install pkg-config</span><br></pre></td></tr></table></figure><h6 id="4-gettext"><a href="#4-gettext" class="headerlink" title="4.gettext"></a>4.gettext</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">configure: error: Cannot locate header file libintl.h</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">原因 --with-gettext编译报错，没有找到gettext可执行文件，因为configure文件中gettext的默认path是</span></span><br><span class="line">for i in $PHP_GETTEXT /usr/local /usr ;do</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">问题解决</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">找到对应可执行程序路径</span></span><br><span class="line">which gettext</span><br><span class="line">/usr/local/opt/gettext/bin/gettext</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果<span class="built_in">which</span>没有结果，那么执行安装</span></span><br><span class="line">brew install gettext</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改--with-gettext</span></span><br><span class="line">--with-gettext=/usr/local/opt/gettext</span><br></pre></td></tr></table></figure><h6 id="5-iconv"><a href="#5-iconv" class="headerlink" title="5.iconv"></a>5.iconv</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">configure: error: Please specify the install prefix of iconv with --with-iconv=&lt;DIR&gt;</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">原因：–with-iconv编译报错，没有找到iconv的可执行文件,或者系统中没有libiconv</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">问题解决</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">找到对应可执行程序路径</span></span><br><span class="line">which iconv</span><br><span class="line">/usr/local/opt/libiconv/bin/iconv</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果<span class="built_in">which</span>找不到</span></span><br><span class="line">brew install libiconv</span><br><span class="line">whcih iconv</span><br><span class="line">/usr/local/opr/libconv/bin/iconv</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改--with-iconv</span></span><br><span class="line">--with-iconv=/usr/local/opt/libiconv/</span><br></pre></td></tr></table></figure><h6 id="6-类似问题可以使用-x2F-configure-–help-gt-gt-文件名-txt-查找对应编译参数，查看参数是否改名或者移除了，例如："><a href="#6-类似问题可以使用-x2F-configure-–help-gt-gt-文件名-txt-查找对应编译参数，查看参数是否改名或者移除了，例如：" class="headerlink" title="6.类似问题可以使用**.&#x2F;configure –help [&gt;&gt; 文件名.txt]** 查找对应编译参数，查看参数是否改名或者移除了，例如："></a>6.类似问题可以使用**.&#x2F;configure –help [&gt;&gt; 文件名.txt]** 查找对应编译参数，查看参数是否改名或者移除了，例如：</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WARNING: unrecognized options: --with-xmlrpc</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">原因：xmlrpc在PHP8中移到了pecl中</span></span><br></pre></td></tr></table></figure><h6 id="7-所有问题都解决后，重新编译，成功后显示："><a href="#7-所有问题都解决后，重新编译，成功后显示：" class="headerlink" title="7.所有问题都解决后，重新编译，成功后显示："></a>7.所有问题都解决后，重新编译，成功后显示：</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">+--------------------------------------------------------------------+</span><br><span class="line">| License:                                                           |</span><br><span class="line">| This software is subject to the PHP License, available in this     |</span><br><span class="line">| distribution in the file LICENSE. By continuing this installation  |</span><br><span class="line">| process, you are bound by the terms of this license agreement.     |</span><br><span class="line">| If you do not agree with the terms of this license, you must abort |</span><br><span class="line">| the installation process at this point.                            |</span><br><span class="line">+--------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line">Thank you for using PHP.</span><br></pre></td></tr></table></figure><h5 id="四、安装（可能需要sudo权限）"><a href="#四、安装（可能需要sudo权限）" class="headerlink" title="四、安装（可能需要sudo权限）"></a>四、安装（可能需要sudo权限）</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">make</span></span><br><span class="line">make</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">make后的结果</span></span><br><span class="line">Generating phar.php</span><br><span class="line">Generating phar.phar</span><br><span class="line">PEAR package PHP_Archive not installed: generated phar will require PHP&#x27;s phar extension be enabled.</span><br><span class="line">directorytreeiterator.inc</span><br><span class="line">clicommand.inc</span><br><span class="line">directorygraphiterator.inc</span><br><span class="line">invertedregexiterator.inc</span><br><span class="line">pharcommand.inc</span><br><span class="line">phar.inc</span><br><span class="line"></span><br><span class="line">Build complete.</span><br><span class="line">Don&#x27;t forget to run &#x27;make test&#x27;.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">make install</span></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h5 id="五、配置文件"><a href="#五、配置文件" class="headerlink" title="五、配置文件"></a>五、配置文件</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cp php.ini-development /usr/local/php/php80/etc/php.ini</span><br><span class="line">  cp /usr/local/php/php80/etc/php-fpm.conf.default /usr/local/php/php80/etc/php-fpm.conf</span><br><span class="line">cp /usr/local/php/php80/etc/php-fpm.d/www.conf.default /usr/local/php/php80/etc/php-fpm.d/www.conf</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意：如果是多版本PHP，记得修改www.conf中php-fpm监听的端口listen=127.0.0.1:9001</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改php-fpm.conf</span></span><br><span class="line">pid = run/php-fpm.pid #前面的注释去掉</span><br></pre></td></tr></table></figure><h5 id="六、使用PHP自带的webserver测试是否安装成功"><a href="#六、使用PHP自带的webserver测试是否安装成功" class="headerlink" title="六、使用PHP自带的webserver测试是否安装成功"></a>六、使用PHP自带的webserver测试是否安装成功</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建index.php</span></span><br><span class="line">cd PHPProjects/test</span><br><span class="line">vim index.php</span><br><span class="line">&lt;?php</span><br><span class="line">    phpinfo();</span><br><span class="line">    </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">执行</span>   </span><br><span class="line">/usr/local/php/php80/bin/php -c /usr/local/php/php80/etc/php.ini -S localhost:9002</span><br><span class="line">[Mon May  4 16:46:01 2020] PHP 7.4.5 Development Server (http://localhost:9002) started</span><br></pre></td></tr></table></figure><p>打开浏览器访问：localhost:9002</p><p><img src="/load_images/php_webserver.png" alt="img"></p><h5 id="七、Mac环境变量配置"><a href="#七、Mac环境变量配置" class="headerlink" title="七、Mac环境变量配置"></a>七、Mac环境变量配置</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alias php80=&quot;/usr/local/php/php80/bin/php&quot;</span><br><span class="line">alias phpfpm80=&quot;sudo /usr/local/php/php80/sbin/php-fpm&quot;</span><br></pre></td></tr></table></figure><h5 id="八、启动、关闭php-fpm"><a href="#八、启动、关闭php-fpm" class="headerlink" title="八、启动、关闭php-fpm"></a>八、启动、关闭php-fpm</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看</span></span><br><span class="line">ps aux | grep php-fpm</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">关闭</span></span><br><span class="line">sudo kill -INT `cat /usr/local/php/php80/var/run/php-fpm.pid`</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启</span></span><br><span class="line">sudo kill -USR2 `cat /usr/local/php/php80/var/run/php-fpm.pid`</span><br></pre></td></tr></table></figure><h4 id="PHP7-4编译安装"><a href="#PHP7-4编译安装" class="headerlink" title="PHP7.4编译安装"></a>PHP7.4编译安装</h4><h5 id="一、下载源码、创建目录-1"><a href="#一、下载源码、创建目录-1" class="headerlink" title="一、下载源码、创建目录"></a>一、下载源码、创建目录</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/local/php/php74</span><br><span class="line"></span><br><span class="line">cd /usr/local/src</span><br><span class="line">wget https://www.php.net/distributions/php-7.4.28.tar.gz</span><br><span class="line">tar zxvf php-7.4.28.tar.gz</span><br><span class="line">cd php-7.4.28</span><br></pre></td></tr></table></figure><h5 id="二、编译-1"><a href="#二、编译-1" class="headerlink" title="二、编译"></a>二、编译</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">sudo ./configure --prefix=/usr/local/php/php74/ \</span><br><span class="line">--with-config-file-path=/usr/local/php/php74/etc \</span><br><span class="line">--with-config-file-scan-dir=/usr/local/php/php74/etc/conf.d \</span><br><span class="line">--with-mhash \</span><br><span class="line">--with-mysqli=shared,mysqlnd \</span><br><span class="line">--with-pdo-mysql=shared,mysqlnd \</span><br><span class="line">--enable-gd \</span><br><span class="line">--with-openssl=/usr/local/Cellar/openssl@1.1/1.1.1q \</span><br><span class="line">--with-iconv=/usr/local/opt/libiconv/ \</span><br><span class="line">--with-zlib \</span><br><span class="line">--with-zip \</span><br><span class="line">--enable-inline-optimization \</span><br><span class="line">--disable-debug \</span><br><span class="line">--disable-rpath \</span><br><span class="line">--enable-xml \</span><br><span class="line">--enable-bcmath \</span><br><span class="line">--enable-shmop \</span><br><span class="line">--enable-sysvsem \</span><br><span class="line">--enable-mbregex \</span><br><span class="line">--enable-mbstring \</span><br><span class="line">--enable-ftp \</span><br><span class="line">--enable-pcntl \</span><br><span class="line">--enable-sockets \</span><br><span class="line">--with-xmlrpc \</span><br><span class="line">--enable-soap \</span><br><span class="line">--without-pear \</span><br><span class="line">--with-gettext=/usr/local/opt/gettext \</span><br><span class="line">--enable-session \</span><br><span class="line">--with-curl \</span><br><span class="line">--with-jpeg \</span><br><span class="line">--with-freetype \</span><br><span class="line">--enable-gd-jis-conv \</span><br><span class="line">--enable-opcache \</span><br><span class="line">--enable-fpm \</span><br><span class="line">--without-gdbm \</span><br><span class="line">--enable-fast-install \</span><br><span class="line">--disable-fileinfo</span><br></pre></td></tr></table></figure><h5 id="三、其他同8-0安装"><a href="#三、其他同8-0安装" class="headerlink" title="三、其他同8.0安装"></a>三、其他同8.0安装</h5><h4 id="多版本composer配置"><a href="#多版本composer配置" class="headerlink" title="多版本composer配置"></a>多版本composer配置</h4><p><a href="https://getcomposer.org/download/">composer下载</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">把composer.phar放入指定文件夹</span></span><br><span class="line">mkdir ~/php_plugin</span><br><span class="line">mv composer.phar ~/php_plugin/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">配置环境变量，指定PHP版本即可</span></span><br><span class="line">alias composer7=&quot;/usr/local/php/php74/bin/php /Users/nonfishz/php_plugin/composer.phar &quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">测试结果</span></span><br><span class="line">composer7</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL InnoDB MVCC机制的原理及实现</title>
      <link href="/mysql/mvcc/"/>
      <url>/mysql/mvcc/</url>
      
        <content type="html"><![CDATA[<p>MVCC（Multiversion Concurrency Control）多版本并发控制，通过一种可见性算法来实现数据库并发控制。</p><span id="more"></span><h4 id="两种读形式"><a href="#两种读形式" class="headerlink" title="两种读形式"></a>两种读形式</h4><ul><li>快照读：读取的是当前事务的课件版本，不用加锁（简单的select就是快照读）</li><li>当前读：读取的是当前版本，例如更新、插入、删除操作以及特殊的读操作</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">update table set ...</span><br><span class="line">insert into table ...</span><br><span class="line">delete from table where ...</span><br><span class="line"></span><br><span class="line">/*特殊的读操作*/</span><br><span class="line">select * from table where ... lock in share mode;</span><br><span class="line">select * from table where ... for update;</span><br></pre></td></tr></table></figure><h4 id="uodo-log-回滚日志"><a href="#uodo-log-回滚日志" class="headerlink" title="uodo log 回滚日志"></a>uodo log 回滚日志</h4><p>undo log是可见性算法的非常重要部分，分为两类</p><ul><li>insert undo log：事务在插入新纪录产生的undo log，当事务提交后可以直接丢弃</li><li>update undo log：事务在进行update或delete的时候产生的undo log，在快照读的时候还是需要的，所以不能直接删除，只有当系统没有比这个log更早的read view的时候才能删除。所以长事务会产生很多老的视图导致undo log无法删除，占用大量存储空间。</li></ul><h4 id="read-view-读视图"><a href="#read-view-读视图" class="headerlink" title="read view 读视图"></a>read view 读视图</h4><p>读视图，是MySQL秒级创建视图的必要条件，比如一个事务在进行select操作（快照读）的时候会创建一个read view，这个read view其实只是三个字段：</p><ul><li>active_trx_id：read view生成时刻系统中正在活跃的事务ID</li><li>up_limit_id：active_trx_id中最小的事务ID</li><li>low_limit_id：active_trx_id中最大事务ID+1</li></ul><h4 id="可见性算法"><a href="#可见性算法" class="headerlink" title="可见性算法"></a>可见性算法</h4><p> 主要思路：当生成read-view的时候如何去拿获取的行记录中的 DB_TRX_ID 去和 read-view 中的三个属性(上面讲了)去作比较：</p><ul><li>首先比较这条记录的 DB_TRX_ID 是否是 小于 up_limit_id 或者 等于当前事务id。如果满足，那么说明当前事务能看到这条记录。如果大于则进入下一轮判断</li><li>然后判断这条记录的 DB_TRX_ID 是否 大于等于 low_limit_id。如果大于等于则说明此事务无法看见该条记录，不然就进入下一轮判断。</li><li>判断该条记录的 DB_TRX_ID 是否在活跃事务的数组中，如果在则说明这条记录还未提交对于当前操作的事务是不可见的，如果不在则说明已经提交，那么就是可见的</li></ul>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Description</title>
      <link href="/once/description/"/>
      <url>/once/description/</url>
      
        <content type="html"><![CDATA[<h3 id="Welcome-to-my-blog"><a href="#Welcome-to-my-blog" class="headerlink" title="Welcome to my blog!"></a>Welcome to my blog!</h3><p>此博客正在进行迁移工作，博客会持续更新。</p><p>Moving！！！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>laravel-project</title>
      <link href="/laralve/laravel/"/>
      <url>/laralve/laravel/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="93719ab034ebc91f4a9a10058a420dd16d7d4ee397b3c92a6e193aa785444a77"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Composer</title>
      <link href="/php/composer/"/>
      <url>/php/composer/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c59c7b4335acf10410a3adc9a4eee0748212a5cc08c4cc2a5d991ffaaf66e35c">cc4eaccd88a7cf11990f2cd15dba718722dbaacbc37a6c1f53b1b49aa4f4c994fa5208fc8c8d4782f9e49e074a59766c9c617ba477e823670ff2325ff311c5be298c91d9269d38319f4f0199001b83afd8b2c5f969339c10387b716c2f478e9362ba797d5952aca441ec0b9ff47145e9aa5caa3e93cf9ab64b0a301a7d5e1434588f23945ac77a69a6b2e0632346f66c06c1b22eb7ae37f98caf06c6a98912a31c31cb33fb550e901298a948a107eb1dfcdac133b0761120e6ce6a5ae07c17fb367db0a2a14770cc6d3cd937033d68578870179e25e65f68a680b308bab9e82466b50eaa4e333d3e75153444ae465ff88b5cbb2a8a776befbc38a65b0ac633ab57c4cf78ecf6ca8680fef07c21d9dca4576a8f87d2c220c11740383a29c5058ddf485d8c4fcdc37863f79ccf1a056a1fda9a5ad66f44236b948b3829fafaf0894f5d83e190f29bedcf73519bb4042226289c3d86282d5bc3c0c197f7767dc8665e12c817e2936f2ab41c075a46d1bd1b89c07d724fdd3e0c2f858b72466081cd209ce96f953b8aed40d5c7338a27055d453a719c119bc48cd40651db6f77a7262e3323d9a0637c554c2a45e4291a9d640daf719a805814588d0eeee2ad2123d534a881eceae8e5050b8c51fdc7ee923374f825bae3d1857a4b9a32890b5212ecfc71225c17d46301ab4b975a989e8510a4309aca1a013c77091965ed2842939439875870b68aec1d5b2dacf7108f2e469cccae3d0b3322b822743272f6b8f0d59c59c547fceeb939bb5379afa46ac06ce21bb9cf489e3909ee51fddd9f3446ce826c17c7a516b7814cc628c46c2639b85ecb6834101860ab5ec599ae730d759136432db9da83bc3988e5d04ceb3b98d5b9206146284c5ae6e43e6a57b41aa50078c763f21a75357eb207bc345015011207e6f8eb897a9308b3502aefebe90230594631c4b34d1c01ec4b1a57ef6821f7ec37bbc011879dbecb685eee1ab74bf790455aaf1282901a4bf3a9ea9a4d8ce31312ee0fd0b52ace839e1219797392b596c03ba6ccd2ade599f96dc11df5166b77b9728fc2ca95742c40b584e22ad5c5ec3302f69f84e2a02c95e1d0341569ee680c80216e3c050a265a998a6577076fe516e39e4bfe105b6cc1e6e4b4e796e14259711a4c79b4113e7317d51c8cda62476a87e2f9ba193b0253766bf230c52d87d8a793bea3c70090f94a8e8c3fef712f66defa82849fe5fd178d0e0948c77c91be5aec302743646dabed91b0195e52353a5f17aef37e274c62be09ea087c336a124718bdd3dd58a30598f2ae84e34f03e5e3ca801828b2976628b9b1a4ef660ac711f09deb3fe0f249becad7145c98bec22f7a2829fc25c2efd25935744bd7b4ca8364bccfa0407af40eedc93d52eed4c00c1ee757f7cc31b4a85bb569b4d9d75f917f80bd36c520c03e9b1c242f9a22137b9abcc2ec49fdf0cb9902a4d8d974d6286bffa8e81c5385e4a32e0c8c196ada65b0d4eeb2293c8bea5ffde0541916fcc1cdb3a728c1b17c6fa45342033c82b46023538abe3ac5ae0bc14a9f77ef2090a9f4ef93ad63d03a176bb67d6424eca473f4f892655272a1c6b435fd526d2b28e1cadacf992419071031520e1ec64925cda39c8a39aae93dde665d2b1c781494c8fd25789de4428326b33803fc6db966407df03556de63b23afbb773a07a2b24ed2874ddca73148f925c39235b7725f7ef39788407e009f2584a3f6037d1dca6b36fbde0c2e0f4a6918f7d14e8a9f77ed227a2703659099253608233135a06c1b53c6b613c5d93c3bba8c056a521e2e234d2af12eaede50b5564bc7eaa708f346737a2821732d9be77c1d95e9de94d4a33bb4b10241904434b6dd81421626c8e10537b9ac0b32560770b1757bcfa9bfbf80e0e0ca085b80debab94edbec426a9e8bce75504d773ae9721bf0db55f1b62b0b7ecf835c68316d28f7570a4e6d8cf1abaad01dc0d73f9bb5a00dcff0fa17d38f9187be8f089d0bb3dd655123b16ae873e2ae17086e79e4eb2942324c6b223bbb0c22422f1023dac2a3979a8a9756ee0331a99d44830bc3390cb3796d396e5de7f831646505e33d9acfa9c583925c1c6614ecb8a443ac102e293c546c58983e77ac6e33bbf1d27839fad947da681ca2552c9b8fe578a19dc02ddc72e708637ea7b3ce3642d9903cb900d8ba43492a3fdfd96f835b6fc0ee232d26f946af8ece6765552a45ec4a51fdfd0b3bdec9eb5c1ce2dfb6c4916dfb87f7ef05b0c887bd94def34126112d7659286a03e86564f89a00820ccbced502d700495d6ad3b0f7d08939512a12e370f6980d9aeb9616efb17f12c52a7f7e33a80c0e2db84a20973f859f973cae1571651495b51ed004e2c2b304daa11509cd1289cef13ec0b358a313f8ee6731dfe11e280228894129645443d6fdb4a061f84b05e44bc443348e2dab61a97b972c91c2ee25da2c2736fc1e85e6d075dc242ba6ae94c291a893ce59493fa6b8f11bcc2a7d525b6c7f75ae4546c427a746f627f6641c57d29a2669ed380c357dcbaac1e6058d07e0fbb3c9413a30303349ddf0f5ede09817cb81ee6b02959c2ff1d3db690fef7ab1cc829ed7bea162d253c950727c581d671d7aa59b6deef5215b076c25b798124bea8cc252867f24e44a920cf88e58361c19e5a6f88f41c3a09014ec652a22532613a77227d4b9a08bc6c7513d80494066b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Composer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Composer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-负载均衡</title>
      <link href="/nginx/load_balancer/"/>
      <url>/nginx/load_balancer/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f8fafda120066ec8877c46dbe5c9dc0b5d4403d36f29e9131f8ff96263c26512">cc4eaccd88a7cf11990f2cd15dba718722dbaacbc37a6c1f53b1b49aa4f4c9947d617272906e2d21b1c0834f98256bc01bcada58a341a6f1e9571d95789013e19eafb10e543266d058682ae08f66339f38583f074f201ee5e42b8afa0ff23b9173e0cbbacdd7081f08097e8114195dbc3e82624d7bfcc8613ed47cbcbdb08b477b4c08e10d7f62169338ca256b389b6a3c9b04c8524e435ba219c3498436cd9e9c55ead30b820d9a0a7b73c9c550246e3bd8ebef8bdbbaea26508404a6fc0f37ca5830c52ac001756376fae2973d39fbebe321412ee9e92df4c86a33459ebfc760ce326bb0c5a010d9422dc5ee4c11ab02e7775f372839403d8a58536898183337b2ce13e704e7f33a96525cf8910a14802e70ef9681e5f762e1c0a00c74deae1cedf7cab4362381ba7048555e968e47135ef6c18fe0262ff0154889f31edcbac8f006ef3732b502f27551ba9cb3f04898d97976b518e9c0b2c729104571fcc044d478620230589750317c0f5d0df8a22865fd8bdae450c0201d4c1eee0240e598b699781ca7c0b9fceca20ada23d9e9</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
